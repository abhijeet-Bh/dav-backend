name: Push Spring Boot App to DockerHub

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: abhibh/dav-banaso-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Extract version from commit message (expects v1.2.3)
      - name: Get version from commit message
        id: get_version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$VERSION" ]; then
            echo "❌ Commit message must include version like v1.0.0"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Setup Java and build jar
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Write firebase JSON (from GitHub Secret) into workspace for Docker build
      - name: Create firebase-service-account.json (runner only)
        run: |
          cat > firebase-service-account.json << 'EOF'
          ${{ secrets.FIREBASE_CREDENTIALS }}
          EOF
          test -s firebase-service-account.json || (echo "Secret is empty" && exit 1)

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build image (includes the firebase JSON via Dockerfile COPY)
      - name: Build Docker image
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          docker build --platform linux/amd64 -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .

      # Push both latest and versioned image
      - name: Push Docker images
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION

      # Clean up the secret file from the runner workspace
      - name: Cleanup secret from runner
        if: always()
        run: rm -f firebase-service-account.json
